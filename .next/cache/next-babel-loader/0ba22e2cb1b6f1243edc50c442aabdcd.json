{"ast":null,"code":"var _jsxFileName = \"/Users/souffanda/Documents/projects/fanda/soufian.github.io/pages/[slug].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport Head from \"next/head\";\nimport marked from \"marked\";\nimport useSWR from 'swr';\n\nconst Post = ({\n  htmlString,\n  data\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 10\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, data.title), __jsx(\"meta\", {\n    name: \"description\",\n    content: data.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, \"contents below\"), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: htmlString\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport const getStaticPaths = async () => {\n  const files = fs.readdirSync(\"posts\");\n  const paths = files.map(filename => ({\n    params: {\n      slug: filename.replace(\".md\", \"\")\n    }\n  }));\n  console.log(\"files :\", files);\n  console.log(\"paths :\", paths);\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params: {\n    slug\n  }\n}) => {\n  const markdownWithMetadata = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n  const parsedMarkdown = matter(markdownWithMetadata);\n  const htmlString = marked(parsedMarkdown.content);\n  return {\n    props: {\n      htmlString,\n      data: parsedMarkdown.data\n    }\n  };\n};\nexport default Post;","map":{"version":3,"sources":["/Users/souffanda/Documents/projects/fanda/soufian.github.io/pages/[slug].js"],"names":["React","fs","path","matter","Head","marked","useSWR","Post","htmlString","data","title","description","__html","getStaticPaths","files","readdirSync","paths","map","filename","params","slug","replace","console","log","fallback","getStaticProps","markdownWithMetadata","readFileSync","join","toString","parsedMarkdown","content","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA0B;AAErC,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,IAAI,CAACC,KAAb,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,OAAO,EAAED,IAAI,CAACE,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADK,EAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALK,EAML;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEJ;AAAV,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANK,CAAP;AAQD,CAVD;;AAYA,OAAO,MAAMK,cAAc,GAAG,YAAY;AAExC,QAAMC,KAAK,GAAGb,EAAE,CAACc,WAAH,CAAe,OAAf,CAAd;AACA,QAAMC,KAAK,GAAGF,KAAK,CAACG,GAAN,CAAUC,QAAQ,KAAK;AACnCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEF,QAAQ,CAACG,OAAT,CAAiB,KAAjB,EAAwB,EAAxB;AADA;AAD2B,GAAL,CAAlB,CAAd;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBT,KAAvB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBP,KAAvB;AAEA,SAAO;AACLA,IAAAA,KADK;AAELQ,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,OAAO;AAAEN,EAAAA,MAAM,EAAE;AAAEC,IAAAA;AAAF;AAAV,CAAP,KAAgC;AAE5D,QAAMM,oBAAoB,GAAGzB,EAAE,CAAC0B,YAAH,CAAgBzB,IAAI,CAAC0B,IAAL,CAAU,OAAV,EAAmBR,IAAI,GAAG,KAA1B,CAAhB,EAAkDS,QAAlD,EAA7B;AACA,QAAMC,cAAc,GAAG3B,MAAM,CAACuB,oBAAD,CAA7B;AACA,QAAMlB,UAAU,GAAGH,MAAM,CAACyB,cAAc,CAACC,OAAhB,CAAzB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLxB,MAAAA,UADK;AAELC,MAAAA,IAAI,EAAEqB,cAAc,CAACrB;AAFhB;AADF,GAAP;AAMD,CAZM;AAcP,eAAeF,IAAf","sourcesContent":["import React from \"react\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nimport Head from \"next/head\";\nimport marked from \"marked\";\nimport useSWR from 'swr';\n\nconst Post = ({ htmlString, data }) => {\n\n  return <div>\n    <Head>\n      <title>{data.title}</title>\n      <meta name=\"description\" content={data.description} />\n    </Head>\n    <div>contents below</div>\n    <div dangerouslySetInnerHTML={{ __html: htmlString }} />\n  </div>\n}\n\nexport const getStaticPaths = async () => {\n\n  const files = fs.readdirSync(\"posts\")\n  const paths = files.map(filename => ({\n    params: {\n      slug: filename.replace(\".md\", \"\")\n    }\n  }))\n\n  console.log(\"files :\", files);\n  console.log(\"paths :\", paths);\n\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport const getStaticProps = async ({ params: { slug } }) => {\n\n  const markdownWithMetadata = fs.readFileSync(path.join('posts', slug + '.md')).toString();\n  const parsedMarkdown = matter(markdownWithMetadata);\n  const htmlString = marked(parsedMarkdown.content)\n\n  return {\n    props: {\n      htmlString,\n      data: parsedMarkdown.data\n    }\n  }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}